#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F1        &kp F2  &kp F3        &kp F4    &kp F5     &kp F6                  &kp F7     &kp F8         &kp F9         &kp F10   &kp F11   &kp F12
&kp ESCAPE    &kp N1  &kp N2        &kp N3    &kp N4     &kp N5                  &kp N6     &kp N7         &kp N8         &kp N9    &kp N0    &kp MINUS
&kp TAB       &kp Q   &kp W         &kp E     &kp R      &kp T                   &kp Y      &kp U          &kp I          &kp O     &kp P     &kp BSLH
&kp TILDE     &kp A   &kp S         &kp D     &kp F      &kp G                   &kp H      &kp J          &kp K          &kp L     &kp SEMI  &kp SQT
&kp LSHFT     &kp Z   &kp X         &kp C     &kp V      &kp B                   &kp N      &kp M          &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT
&kp LEFT_WIN  &to 1   &kp LEFT_ALT  &kp LEFT  &kp RIGHT                                     &kp UP         &kp DOWN       &kp RBKT  &kp LEFT  &kp RIGHT
                                              &kp SPACE  &kp HOME  &kp DELETE    &mkp LCLK  &kp PAGE_UP    &kp ENTER
                                              &kp LCTRL  &kp END   &kp INSERT    &mkp RCLK  &kp PAGE_DOWN  &kp BACKSPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans  &bl BL_TOG            &trans  &kp PRINTSCREEN  &kp SCROLLLOCK   &trans           &trans        &trans
&rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans           &trans  &trans  &bl BL_INC            &trans  &trans           &kp KP_DIVIDE    &kp KP_ASTERISK  &kp KP_MINUS  &trans
&rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans           &trans  &trans  &bl BL_DEC            &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &trans
&rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans           &trans  &trans  &trans                &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &trans
&rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans           &trans  &trans  &trans                &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &trans
&trans           &to 0            &trans           &trans  &trans                                &kp KP_NUMBER_0  &trans           &kp DOT          &kp KP_ENTER  &trans
                                                           &trans  &trans      &trans    &trans  &trans           &trans
                                                           &trans  &trans      &trans    &trans  &trans           &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                                 &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans  &trans  &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
