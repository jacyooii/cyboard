#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    macros {
        macro_Layer1: macro_Layer1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &mo 1>,
                <&macro_tap &rgb_ug RGB_COLOR_HSB(210,94,53) &rgb_ug RGB_ON>,
                <&macro_pause_for_release>,
                <&macro_release &mo 1>,
                <&macro_tap &rgb_ug RGB_OFF>,

            label = "macro_Layer1";
            wait-ms = <0>;
            tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp F1         &kp F2    &kp F3        &kp F4    &kp F5     &kp F6                  &kp F7     &kp F8         &kp F9         &kp F10    &kp F11   &kp F12
&kp ESCAPE     &kp N1    &kp N2        &kp N3    &kp N4     &kp N5                  &kp N6     &kp N7         &kp N8         &kp N9     &kp N0    &kp MINUS
&kp TAB        &kp Q     &kp W         &kp E     &kp R      &kp T                   &kp Y      &kp U          &kp I          &kp O      &kp P     &kp BSLH
&macro_Layer1  &kp A     &kp S         &kp D     &kp F      &kp G                   &kp H      &kp J          &kp K          &kp L      &kp SEMI  &kp SQT
&kp LSHFT      &kp Z     &kp X         &kp C     &kp V      &kp B                   &kp N      &kp M          &kp COMMA      &kp DOT    &kp FSLH  &kp RSHFT
&kp LEFT_WIN   &kp CAPS  &kp LEFT_ALT  &kp LEFT  &kp RIGHT                                     &kp UP         &kp DOWN       &mkp MCLK  &kp LEFT  &kp RIGHT
                                                 &kp SPACE  &kp HOME  &kp DELETE    &mkp LCLK  &kp PAGE_UP    &kp ENTER
                                                 &kp LCTRL  &kp END   &kp INSERT    &mkp RCLK  &kp PAGE_DOWN  &kp BACKSPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none           &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRD            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans             &kp K_MUTE       &none           &none            &rgb_ug RGB_HUD  &rgb_ug RGB_HUI            &kp ASTERISK          &kp KP_NUMLOCK         &kp KP_DIVIDE     &kp KP_ASTERISK    &kp KP_MINUS    &none
&trans             &kp PRINTSCREEN  &none           &none            &rgb_ug RGB_SAD  &rgb_ug RGB_SAI            &kp AMPERSAND         &kp KP_NUMBER_7        &kp KP_NUMBER_8   &kp KP_NUMBER_9    &kp KP_PLUS     &none
&trans             &kp SCROLLLOCK   &bt BT_PRV      &bt BT_NXT       &rgb_ug RGB_SPD  &rgb_ug RGB_SPI            &kp EQUAL             &kp KP_NUMBER_4        &kp KP_NUMBER_5   &kp KP_NUMBER_6    &kp KP_PLUS     &none
&trans             &kp PAUSE_BREAK  &bt BT_CLR_ALL  &none            &rgb_ug RGB_EFR  &rgb_ug RGB_EFF            &kp TILDE             &kp KP_NUMBER_1        &kp KP_NUMBER_2   &kp KP_NUMBER_3    &kp KP_ENTER    &none
&trans             &trans           &trans          &trans           &trans                                                            &kp KP_NUMBER_0        &none             &kp DOT            &kp KP_ENTER    &none
                                                                     &trans           &trans           &trans    &trans                &trans                 &trans
                                                                     &trans           &trans           &trans    &trans                &trans                 &trans
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors = <&zip_xy_scaler 4 5>;

    //     activate layer 3 within 500ms of the trackball moving
    //     <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,
        <&zip_xy_scaler 1 16>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
